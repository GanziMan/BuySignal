version: '3'
services:
  db:
    image: postgres:13  # PostgreSQL 버전
    volumes:
      - postgres_data:/var/lib/postgresql/data/  # PostgreSQL 데이터 영구 저장
    environment:
      POSTGRES_DB: buysignal_db  # DB 이름
      POSTGRES_USER: buysignal_user  # 사용자 이름
      POSTGRES_PASSWORD: ecom123!@#  # 사용자 비밀번호
      POSTGRES_HOST_AUTH_METHOD: "trust"

  web:
    build: .
    volumes:
      - C:/Users/swag0/Desktop/E-Commerce-Web/server/main_api_server:/app  # 로컬 경로를 컨테이너의 /app으로 마운트
    ports:
      - "8000:8000"  # 호스트 80번 포트를 컨테이너의 8000번 포트에 매핑
    depends_on:
      - db  # web 서비스는 db 서비스가 구동된 후 시작됨
    environment:
      - DJANGO_SETTINGS_MODULE=main_api_server.settings.develop  # 배포 환경 설정 사용
      - DB_HOST=db  # Django 설정에서 db 호스트
      - DB_PORT=5432  # PostgreSQL 기본 포트
      - DB_NAME=buysignal_db
      - DB_USER=buysignal_user
      - DB_PASSWORD=ecom123!@#
      # 슈퍼유저를 위한 환경 변수 추가
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    command: >
      sh -c "/app/wait-for-it.sh db 5432 --
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py shell < /app/create_superusers.py &&
             gunicorn main_api_server.wsgi:application --bind 0.0.0.0:8000 --log-level info"
      # 컨테이너가 시작될 때 마이그레이션을 실행하고, gunicorn을 통해 Django 서버 구동

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:8000"  # 호스트 80번 포트를 nginx의 80번 포트에 매핑
    depends_on:
      - web

volumes:
  postgres_data:  # PostgreSQL 데이터 볼륨 (영구 저장소)
